@using Domain.ViewModels
@model EventDetailsViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<link rel="stylesheet" href="~/css/EventDetails.css" />

@{
    Layout = "~/Views/Shared/_Dependencies.cshtml";
}


<div class="container-fluid mt-5">
    <div id="overlay">
        <div class="overlay-content">
            <div class="spinner"></div>
            <p class="proccessing">Processing...</p>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="event-image-container"> 
                <img src="@Model.Event.Image" alt="Event Image" class="event-img" />
            </div>
        </div>
        <div class="event-container col-10 mx-auto p-3 mt-5">
            <div class="row">
                <div class="col-md-6">
                    <div class="event-title">
                        <h1>@Model.Event.Name</h1>
                    </div>
                    <div class="event-date">
                        <h2>Date and time</h2>
                        <div class="date-info">
                            <i class="fas fa-calendar-alt"></i>
                            <span>@Model.Event.StartDate.ToString("ddd, MMM d • h:mm tt", System.Globalization.CultureInfo.InvariantCulture)</span> -
                            <span>@Model.Event.EndDate.ToString("ddd, MMM d • h:mm tt", System.Globalization.CultureInfo.InvariantCulture)</span>
                        </div>
                    </div>
                    <div class="event-location">
                        <h2>Location</h2>
                        <div class="location-info">
                            <div class="location-icon">
                                <i class="fa-solid fa-location-dot"></i>
                            </div>
                            <div class="location-place">
                                <h3>@Model.Event.Place</h3>
                                <span>@Model.Event.StreetName, @Model.Event.City, @Model.Event.State</span>
                            </div>
                        </div>
                    </div>
                    <div class="event-duration">
                        <h2>Duration</h2>
                        <div class="duration-info">
                            <div class="duration-icon">
                                <i class="fa-solid fa-clock"></i>
                            </div>
                            <div class="duration-details">
                                @{
                                    TimeSpan duration = Model.Event.EndDate - Model.Event.StartDate;
                                    int days = duration.Days;
                                    int hours = duration.Hours;

                                    string durationString = "";
                                    if (days > 0)
                                    {
                                        durationString += $"{days} {(days == 1 ? "day" : "days")}";
                                        if (hours > 0)
                                        {
                                            durationString += $" {hours} {(hours == 1 ? "hour" : "hours")}";
                                        }
                                    }
                                    else
                                    {
                                        durationString += $"{hours} {(hours == 1 ? "hour" : "hours")}";
                                    }
                                }
                                <span>@durationString</span>
                            </div>
                        </div>
                    </div>
                    <p class="card-text">
                        <strong>@Localizer["About"]</strong> @Model.Event.Description
                    </p>
 
                </div>
                <div class="col-md-6">
                    @if (Model.Tickets.Count > 0)
                    {
                        @foreach (var ticket in Model.Tickets)
                        {
                            <div class="card mb-3">
                                <div class="card-body">
                                    <h5 class="card-title">@ticket.Name</h5>
                                    <p class="card-text">@ticket.Description</p>
                                    @if(ticket.Quantity > 0){
                                        @if(!ticket.IsFree){
                                            <p class="card-text">@Localizer["Price"]: $@ticket.Price</p>
                                        }else{
                                            <p class="card-text">@Localizer["Free"]</p>
                                        }
                                        <p class="card-text" id="quantity-@ticket.Id">@Localizer["Available"]: @ticket.Quantity</p>
                                        <p class="card-text" id="available-@ticket.Id"></p>
                                        <div class="quantity-container">
                                            <button class="minus-button" data-ticket-id="@ticket.Id">-</button>
                                            <input type="number" class="quantity-input" value="0" min="0" max="7" data-ticket-id="@ticket.Id" readonly/>
                                            <button class="plus-button" data-ticket-id="@ticket.Id">+</button>
                                        </div>
                                        <div data-ticket-id="@ticket.Id" class="quantityErrorMessage text-danger"></div>
                                        @if (!ticket.IsFree)
                                        {
                                            <p class="card-text">
                                                <strong>@Localizer["Total Price"]: <span class="total-price" data-ticket-id="@ticket.Id">$0.00</span></strong>
                                            </p>
                                        }else{

                                        }
                                        @if(ticket.IsAvailable)
                                        {
                                            <button id="buy-btn-@ticket.Id" class="btn btn-success buy-button" data-ticket-id="@ticket.Id" data-quantity="0">@Localizer["Reserve a Spot"]</button>
                                            <div id="countdown-@ticket.Id" class="countdown-container">
                                                <div class="countdown-unit">
                                                    <span class="countdown-number" id="days-@ticket.Id"></span>
                                                    <span class="countdown-label">Days</span>
                                                </div>
                                                <div class="countdown-unit">
                                                    <span class="countdown-number" id="hours-@ticket.Id"></span>
                                                    <span class="countdown-label">Hours</span>
                                                </div>
                                                <div class="countdown-unit">
                                                    <span class="countdown-number" id="minutes-@ticket.Id"></span>
                                                    <span class="countdown-label">Minutes</span>
                                                </div>
                                                <div class="countdown-unit">
                                                    <span class="countdown-number" id="seconds-@ticket.Id"></span>
                                                    <span class="countdown-label">Seconds</span>
                                                </div>
                                            </div>
                                         
                                        }else{
                                            <p>@Localizer["Tickets are currently unavailable."] (@Localizer["Sale Start Date"]: @ticket.SaleStartDate.ToString("MMM dd, yyyy HH:mm tt"),  @Localizer["Sale End Date"]: @ticket.SaleEndDate.ToString("MMM dd, yyyy HH:mm tt"))</p>
                                        }
                                        <hr />
                                    }else{
                                        <div class="text-center">
                                            <p style="color: red; font-weight: bold; font-size:22px; font-family:sans-serif;">@Localizer["Tickets are sold out."]</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@{
    var ticketTypes = Model.Tickets.Select(t => new
    {
        ticketId = t.Id,
        saleEndDate = t.SaleEndDate.ToString("yyyy-MM-ddTHH:mm:ss"),
        price = t.Price,
        isFree = t.IsFree
    }).ToList();
    var eventData = Model.Event.Id;
}

@section Scripts{
    @{
    <partial name="_ValidationScriptsPartial" />
    }
    <script>
        var tickets = @Html.Raw(Json.Serialize(ticketTypes));
        var eventId = @Html.Raw(Json.Serialize(eventData));
        //console.log(tickets);
        //console.log(eventId);
    </script>

    <script src="~/js/ticketCountDown.js"></script>
    <script src="~/js/ticketPriceBasedQuantity.js"></script>


}
